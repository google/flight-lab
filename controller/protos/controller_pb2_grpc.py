# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import controller_pb2 as controller__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ControlServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UpdateStatus = channel.unary_unary(
        '/flightlab.ControlService/UpdateStatus',
        request_serializer=controller__pb2.MachineStatus.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.Watch = channel.unary_stream(
        '/flightlab.ControlService/Watch',
        request_serializer=controller__pb2.MachineId.SerializeToString,
        response_deserializer=controller__pb2.SystemCommand.FromString,
        )


class ControlServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def UpdateStatus(self, request, context):
    """Updates status of components from client to server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Watch(self, request, context):
    """Listens to command from server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ControlServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UpdateStatus': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateStatus,
          request_deserializer=controller__pb2.MachineStatus.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'Watch': grpc.unary_stream_rpc_method_handler(
          servicer.Watch,
          request_deserializer=controller__pb2.MachineId.FromString,
          response_serializer=controller__pb2.SystemCommand.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'flightlab.ControlService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
